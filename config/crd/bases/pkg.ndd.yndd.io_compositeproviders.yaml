---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: compositeproviders.pkg.ndd.yndd.io
spec:
  group: pkg.ndd.yndd.io
  names:
    categories:
    - ndd
    - pkg
    kind: CompositeProvider
    listKind: CompositeProviderList
    plural: compositeproviders
    singular: compositeprovider
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.kind=='PackageInstalled')].status
      name: INSTALLED
      type: string
    - jsonPath: .status.conditions[?(@.kind=='PackageHealthy')].status
      name: HEALTHY
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: A CompositeProvider provides the definition of a CompositeProvider
          configuration.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ControllerSpec specifies the configuration of a Controller.
            properties:
              packages:
                description: Packages define the package specification used for creating
                  the provider
                items:
                  description: PackageSpec defines the desired state of Package
                  properties:
                    kind:
                      description: Kind is the kind of package
                      enum:
                      - worker
                      - reconciler
                      type: string
                    name:
                      description: Name is the name of the package
                      type: string
                    package:
                      description: Package is the name of the image of the package
                        that is being requested.
                      type: string
                    packagePullPolicy:
                      default: IfNotPresent
                      description: PackagePullPolicy defines the pull policy for the
                        package. Default is IfNotPresent.
                      type: string
                    packagePullSecrets:
                      description: PackagePullSecrets are named secrets in the same
                        namespace that can be used to fetch packages from private
                        registries.
                      items:
                        description: LocalObjectReference contains enough information
                          to let you locate the referenced object inside the same
                          namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      type: array
                    revisionActivationPolicy:
                      default: Automatic
                      description: RevisionActivationPolicy specifies how the package
                        controller should update from one revision to the next. Options
                        are Automatic or Manual. Default is Automatic.
                      type: string
                    revisionHistoryLimit:
                      default: 1
                      description: RevisionHistoryLimit dictates how the package controller
                        cleans up old inactive package revisions. Defaults to 1. Can
                        be disabled by explicitly setting to 0.
                      format: int64
                      type: integer
                    skipDependencyResolution:
                      default: false
                      description: SkipDependencyResolution indicates to the package
                        manager whether to skip resolving dependencies for a package.
                        Setting this value to true may have unintended consequences.
                        Default is false.
                      type: boolean
                  required:
                  - package
                  type: object
                type: array
              vendorType:
                description: VendorType specifies the vendor of the provider composite
                enum:
                - unknown
                - nokiaSRL
                - nokiaSROS
                type: string
            type: object
          status:
            description: CompositeProviderStatus defines the observed state of CompositeProvider
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource
                  properties:
                    kind:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                  required:
                  - kind
                  - lastTransitionTime
                  - reason
                  - status
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
